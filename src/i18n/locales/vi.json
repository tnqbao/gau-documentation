{
  "nav": {
    "overview": "T·ªïng quan",
    "products": "S·∫£n ph·∫©m",
    "diagram": "S∆° ƒë·ªì H·∫° t·∫ßng",
    "architecture": "Ki·∫øn tr√∫c",
    "technology": "C√¥ng ngh·ªá",
    "services": "Services",
    "api": "API Reference"
  },
  "common": {
    "version": "Phi√™n b·∫£n",
    "status": "Tr·∫°ng th√°i",
    "port": "C·ªïng",
    "repository": "Repository",
    "tech": "C√¥ng ngh·ªá",
    "description": "M√¥ t·∫£",
    "active": "Ho·∫°t ƒë·ªông",
    "development": "Ph√°t tri·ªÉn",
    "planned": "K·∫ø ho·∫°ch",
    "viewRepository": "Xem Repository",
    "external": "B√™n ngo√†i",
    "internal": "N·ªôi b·ªô",
    "cluster": "C·ª•m",
    "communication": "Giao ti·∫øp",
    "management": "Qu·∫£n l√Ω",
    "processing": "X·ª≠ l√Ω",
    "security": "B·∫£o m·∫≠t",
    "monitoring": "Gi√°m s√°t",
    "storage": "L∆∞u tr·ªØ"
  },
  "home": {
    "title": "T√†i li·ªáu H·ªá th·ªëng Microservices Gau",
    "subtitle": "H·ªá th·ªëng microservices hi·ªán ƒë·∫°i ƒë∆∞·ª£c x√¢y d·ª±ng v·ªõi Go, Node.js, K3s v√† c√°c c√¥ng ngh·ªá cloud-native. Cung c·∫•p gi·∫£i ph√°p to√†n di·ªán cho qu·∫£n l√Ω ng∆∞·ªùi d√πng, ph√¢n quy·ªÅn, upload files, v√† email services.",
    "servicesOverview": "T·ªïng quan Services",
    "servicesDescription": "H·ªá th·ªëng bao g·ªìm {count} microservices ch√≠nh, m·ªói service ƒë·∫£m nh·∫≠n m·ªôt ch·ª©c nƒÉng c·ª• th·ªÉ v√† c√≥ th·ªÉ scale ƒë·ªôc l·∫≠p.",
    "techStack": "Tech Stack",
    "techStackDescription": "C√¥ng ngh·ªá ƒë∆∞·ª£c s·ª≠ d·ª•ng trong h·ªá th·ªëng",
    "infrastructureOverview": "H·∫° t·∫ßng",
    "infrastructureDescription": "Th√†nh ph·∫ßn h·∫° t·∫ßng h·ªó tr·ª£ h·ªá th·ªëng"
  },
  "products": {
    "title": "S·∫£n ph·∫©m ·ª©ng d·ª•ng",
    "subtitle": "C√°c s·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c tri·ªÉn khai tr√™n h·∫° t·∫ßng K3s microservices",
    "gauPhim": {
      "title": "G·∫•u Phim - N·ªÅn t·∫£ng Streaming Phim",
      "description": "M·ªôt n·ªÅn t·∫£ng xem phim tr·ª±c tuy·∫øn hi·ªán ƒë·∫°i ƒë∆∞·ª£c x√¢y d·ª±ng tr√™n h·∫° t·∫ßng K3s v·ªõi kh·∫£ nƒÉng m·ªü r·ªông cao",
      "about": "V·ªÅ G·∫•u Phim",
      "featuresTitle": "T√≠nh nƒÉng n·ªïi b·∫≠t",
      "techImplementation": "H·∫° t·∫ßng k·ªπ thu·∫≠t",
      "screenshots": "Screenshots & Demo",
      "experience": "Tr·∫£i nghi·ªám ngay",
      "visit": "Truy c·∫≠p G·∫•u Phim",
      "officialWebsite": "Website ch√≠nh th·ª©c",
      "liveFromWebsite": "Tr·ª±c ti·∫øp t·ª´ website",
      "accessWebsite": "Truy c·∫≠p website",
      "techImplementationTitle": "Tri·ªÉn khai k·ªπ thu·∫≠t",
      "servicesUsed": "Services s·ª≠ d·ª•ng",
      "screenshotsSection": "H√¨nh ·∫£nh",
      "demoSection": "Demo & Xem tr∆∞·ªõc",
      "features": {
        "4kStreaming": "Streaming ch·∫•t l∆∞·ª£ng 4K",
        "offlineDownload": "T·∫£i xu·ªëng offline",
        "multiDevice": "ƒêa thi·∫øt b·ªã",
        "noAds": "Kh√¥ng qu·∫£ng c√°o",
        "multiLanguageSubtitle": "Subtitle ƒëa ng√¥n ng·ªØ"
      },
      "services": {
        "cdnService": "CDN Service",
        "accountService": "Account Service",
        "authService": "Auth Service",
        "emailService": "Email Service"
      },
      "techDetails": {
        "containerOrchestration": "Container orchestration",
        "scalableArchitecture": "Scalable architecture",
        "globalContentDelivery": "Global content delivery",
        "userAuthentication": "User authentication",
        "emailNotifications": "Email notifications"
      },
      "screenshotsTitle": "Screenshots t·ª´ Website",
      "screenshots": {
        "homepage": {
          "title": "Trang ch·ªß - Giao di·ªán ch√≠nh",
          "description": "M√†n h√¨nh ch√≠nh v·ªõi danh s√°ch phim hot v√† giao di·ªán ng∆∞·ªùi d√πng tr·ª±c quan"
        },
        "movieDetail": {
          "title": "Trang phim - Chi ti·∫øt",
          "description": "Trang th√¥ng tin chi ti·∫øt phim v·ªõi trailer, th√¥ng tin di·ªÖn vi√™n v√† ƒë√°nh gi√°"
        },
        "videoPlayer": {
          "title": "Tr√¨nh ph√°t video",
          "description": "Giao di·ªán xem phim v·ªõi ƒëi·ªÅu khi·ªÉn ƒë·∫ßy ƒë·ªß v√† ch·∫•t l∆∞·ª£ng HD/4K"
        }
      },
      "screenshotsNote": "Click v√†o c√°c ·∫£nh ƒë·ªÉ xem chi ti·∫øt ho·∫∑c truy c·∫≠p website ƒë·ªÉ tr·∫£i nghi·ªám tr·ª±c ti·∫øp",
      "performanceStats": "Th·ªëng k√™ hi·ªáu nƒÉng",
      "responseTime": "Th·ªùi gian ph·∫£n h·ªìi",
      "userSatisfaction": "H√†i l√≤ng ng∆∞·ªùi d√πng"
    }
  },
  "services": {
    "title": "Microservices",
    "description": "Danh s√°ch c√°c microservices trong h·ªá th·ªëng Gau",
    "viewRepository": "Xem Repository",
    "accounts": {
      "name": "Account Service",
      "description": "Qu·∫£n l√Ω t√†i kho·∫£n ng∆∞·ªùi d√πng, x√°c th·ª±c, ƒëƒÉng k√Ω, h·ªì s∆° ng∆∞·ªùi d√πng"
    },
    "authorization": {
      "name": "Authorization Service",
      "description": "Qu·∫£n l√Ω ph√¢n quy·ªÅn, ki·ªÉm so√°t truy c·∫≠p v√† qu·∫£n l√Ω token"
    },
    "cdn": {
      "name": "CDN Service",
      "description": "Qu·∫£n l√Ω CDN v√† x·ª≠ l√Ω h√¨nh ·∫£nh"
    },
    "upload": {
      "name": "Upload Service",
      "description": "Qu·∫£n l√Ω upload file v√† media"
    },
    "email": {
      "name": "Email Service",
      "description": "G·ª≠i email, th√¥ng b√°o v√† x√°c th·ª±c email"
    }
  },
  "infrastructure": {
    "title": "S∆° ƒë·ªì H·∫° t·∫ßng",
    "subtitle": "S∆° ƒë·ªì chi ti·∫øt h·∫° t·∫ßng t·ª´ ngo√†i v√†o trong - Homelab ƒë·∫øn Microservices",
    "overview": "T·ªïng quan Ki·∫øn tr√∫c H·∫° t·∫ßng",
    "physicalLayer": "L·ªõp V·∫≠t L√Ω",
    "networkLayer": "L·ªõp M·∫°ng",
    "orchestrationLayer": "L·ªõp Orchestration",
    "applicationLayer": "L·ªõp ·ª®ng d·ª•ng",
    "physicalInfrastructure": "L·ªõp H·∫° t·∫ßng V·∫≠t l√Ω",
    "applicationInfrastructure": "L·ªõp H·∫° t·∫ßng ·ª®ng d·ª•ng (K3s)",
    "dataFlow": "Lu·ªìng D·ªØ li·ªáu H·∫° t·∫ßng",
    "fromOutsideIn": "T·ª´ Ngo√†i v√†o Trong",
    "serviceCommunication": "Lu·ªìng Giao ti·∫øp Service Chi ti·∫øt",
    "requestJourney": "H√†nh tr√¨nh Request qua K3s Cluster",
    "homelab": "Homelab V·∫≠t l√Ω",
    "proxmoxDescription": "M√°y ch·ªß v·∫≠t l√Ω ch·∫°y Proxmox VE",
    "debianVms": "6 M√°y ·∫¢o Debian",
    "debianDescription": "1 Master + 5 Worker nodes, k·∫øt n·ªëi qua Tailscale VPN",
    "k3sCluster": "K3s Kubernetes Cluster",
    "k3sDescription": "Container orchestration tr√™n c√°c VMs",
    "applicationServices": "Application Services",
    "servicesDescription": "Microservices, databases, monitoring stack",
    "physicalInfrastructureDiagram": "S∆° ƒë·ªì H·∫° t·∫ßng V·∫≠t l√Ω",
    "tailscaleVpnMesh": "M·∫°ng Mesh VPN Tailscale",
    "vpnFeatures": "ƒê·∫∑c ƒëi·ªÉm m·∫°ng VPN:",
    "vpnBenefits": "L·ª£i √≠ch:",
    "clusterArchitecture": "Ki·∫øn tr√∫c K3s Cluster - Giao ti·∫øp Service qua Cluster IPs",
    "clusterDescription": "üöÄ Microservices giao ti·∫øp n·ªôi b·ªô qua Kubernetes cluster IPs v√† service discovery",
    "externalLayer": "L·ªõp B√™n ngo√†i",
    "publicInternet": "Internet C√¥ng c·ªông & CDN",
    "clientApps": "·ª®ng d·ª•ng Client",
    "webMobileApis": "Web, Mobile, APIs",
    "externalAccess": "Truy c·∫≠p B√™n ngo√†i",
    "cloudflareCdn": "Cloudflare CDN",
    "globalEdge": "M·∫°ng Edge To√†n c·∫ßu",
    "edgeCaching": "Edge Caching",
    "loadBalancer": "Load Balancer",
    "trafficDistribution": "Ph√¢n ph·ªëi Traffic",
    "httpsTraffic": "HTTPS Traffic",
    "internalNetwork": "M·∫°ng N·ªôi b·ªô (Giao ti·∫øp Cluster IP)",
    "apiGatewayLayer": "L·ªõp API Gateway",
    "apiGateway": "API Gateway",
    "routesToServices": "ƒê·ªãnh tuy·∫øn ƒë·∫øn Services",
    "servicesMesh": "Microservices Mesh - Giao ti·∫øp Cluster IP",
    "userManagement": "Qu·∫£n l√Ω Ng∆∞·ªùi d√πng",
    "jwtOauth": "JWT & OAuth",
    "contentDelivery": "Ph√¢n ph·ªëi N·ªôi dung",
    "fileHandling": "X·ª≠ l√Ω File",
    "notifications": "Th√¥ng b√°o",
    "internalServiceDiscovery": "Service Discovery & Giao ti·∫øp N·ªôi b·ªô",
    "dnsResolution": "Ph√¢n gi·∫£i DNS",
    "autoLoadBalancing": "Ph√¢n ph·ªëi traffic t·ª± ƒë·ªông",
    "serviceMesh": "Service Mesh",
    "secureInterService": "Giao ti·∫øp inter-service an to√†n",
    "jwtValidation": "X√°c th·ª±c JWT",
    "fileProcessing": "X·ª≠ l√Ω File",
    "sendNotifications": "G·ª≠i Th√¥ng b√°o",
    "dataStorageLayer": "L·ªõp D·ªØ li·ªáu & L∆∞u tr·ªØ",
    "primaryDatabase": "Database Ch√≠nh",
    "acidCompliance": "ACID Compliance",
    "readReplicas": "Read Replicas",
    "cacheSessions": "Cache & Sessions",
    "inMemory": "In-Memory",
    "subMsLatency": "Sub-ms Latency",
    "messageQueue": "Message Queue",
    "eventDriven": "Event-Driven",
    "asyncProcessing": "Async Processing",
    "monitoring": "Gi√°m s√°t",
    "observability": "Kh·∫£ nƒÉng quan s√°t",
    "externalStorage": "L∆∞u tr·ªØ B√™n ngo√†i",
    "cloudStorageIntegration": "T√≠ch h·ª£p Cloud Storage",
    "cloudflareR2": "Cloudflare R2",
    "s3Compatible": "S3-Compatible",
    "objectStorage": "Object Storage",
    "globalCdn": "CDN To√†n c·∫ßu",
    "components": {
      "homelabPhysical": "Homelab V·∫≠t L√Ω",
      "homelabPhysicalDesc": "H·∫° t·∫ßng v·∫≠t l√Ω t·∫°i nh√† v·ªõi m√°y ch·ªß ch·∫°y Proxmox VE",
      "homelabPhysicalDetails": "M√°y ch·ªß v·∫≠t l√Ω c√†i ƒë·∫∑t Proxmox Virtual Environment ƒë·ªÉ qu·∫£n l√Ω m√°y ·∫£o",
      "proxmoxVe": "Proxmox VE",
      "proxmoxVeDesc": "N·ªÅn t·∫£ng ·∫£o h√≥a m√£ ngu·ªìn m·ªü qu·∫£n l√Ω 6 m√°y ·∫£o Debian Linux",
      "proxmoxVeDetails": "Hypervisor Type-1 cung c·∫•p giao di·ªán web ƒë·ªÉ qu·∫£n l√Ω m√°y ·∫£o v√† container",
      "debianVms": "6 M√°y ·∫¢o Debian",
      "debianVmsDesc": "1 Master Node + 5 Agent Nodes t·∫°o th√†nh K3s cluster",
      "debianVmsDetails": "C√°c m√°y ·∫£o Debian Linux ƒë∆∞·ª£c c·∫•u h√¨nh l√†m c√°c node trong K3s Kubernetes cluster",
      "tailscaleVpn": "Tailscale VPN",
      "tailscaleVpnDesc": "M·∫°ng ri√™ng ·∫£o k·∫øt n·ªëi t·∫•t c·∫£ c√°c node v·ªõi nhau",
      "tailscaleVpnDetails": "WireGuard-based VPN t·∫°o mesh network an to√†n gi·ªØa c√°c m√°y ·∫£o"
    },
    "vpnFeaturesList": {
      "meshNetwork": "M·∫°ng mesh point-to-point",
      "wireguardEncryption": "WireGuard encryption",
      "natTraversal": "NAT traversal t·ª± ƒë·ªông",
      "zeroConfig": "Zero-config networking"
    },
    "vpnBenefitsList": {
      "secureConnection": "K·∫øt n·ªëi an to√†n gi·ªØa c√°c node",
      "noComplexFirewall": "Kh√¥ng c·∫ßn c·∫•u h√¨nh firewall ph·ª©c t·∫°p",
      "easyNodeManagement": "D·ªÖ d√†ng th√™m/x√≥a node",
      "centralizedManagement": "Qu·∫£n l√Ω t·∫≠p trung qua web console"
    }
  },
  "techStacks": {
    "backend": "Backend",
    "database": "Database",
    "messagequeue": "Message Queue",
    "storage": "Storage",
    "containerorchestration": "Container & Orchestration",
    "monitoringlogging": "Monitoring & Logging",
    "authentication": "Authentication",
    "descriptions": {
      "go": "Ng√¥n ng·ªØ ch√≠nh cho microservices",
      "gin": "Web framework cho Go",
      "nodejs": "Runtime cho Email Service",
      "typescript": "Ng√¥n ng·ªØ cho Email Service",
      "postgresql": "Database ch√≠nh cho c√°c service",
      "redis": "Cache v√† session storage",
      "rabbitmq": "Message broker cho async communication",
      "cloudflareR2": "S3-compatible object storage",
      "docker": "Container platform",
      "k3s": "Lightweight Kubernetes distribution",
      "grafana": "Visualization v√† dashboards",
      "loki": "Log aggregation system",
      "tempo": "Distributed tracing backend",
      "prometheus": "Metrics collection v√† alerting",
      "jwt": "JSON Web Token cho authentication"
    }
  },
  "api": {
    "title": "API Reference",
    "description": "T√†i li·ªáu API cho t·∫•t c·∫£ c√°c microservices",
    "baseUrl": "Base URL",
    "endpoints": "Endpoints"
  },
  "architecture": {
    "title": "Ki·∫øn tr√∫c H·ªá th·ªëng",
    "description": "M√¥ t·∫£ ki·∫øn tr√∫c microservices v√† c√°ch c√°c service t∆∞∆°ng t√°c v·ªõi nhau",
    "microservicesTitle": "Nguy√™n t·∫Øc Ki·∫øn tr√∫c Microservices",
    "microservicesDescription": "H·ªá th·ªëng c·ªßa ch√∫ng t√¥i tu√¢n theo c√°c nguy√™n t·∫Øc Domain-Driven Design (DDD) v·ªõi m·ªói microservice s·ªü h·ªØu domain v√† d·ªØ li·ªáu ri√™ng.",
    "serviceIndependence": "T√≠nh ƒë·ªôc l·∫≠p c·ªßa Service",
    "communicationPatterns": "M√¥ h√¨nh giao ti·∫øp",
    "serviceDomainBreakdown": "Ph√¢n chia Domain theo Service",
    "serviceIndependencePoints": {
      "dedicatedDatabase": "M·ªói service c√≥ database ri√™ng bi·ªát",
      "independentDeployment": "Tri·ªÉn khai v√† m·ªü r·ªông ƒë·ªôc l·∫≠p",
      "technologyFlexibility": "Linh ho·∫°t technology stack cho t·ª´ng service",
      "faultIsolation": "C√°ch ly l·ªói v√† kh·∫£ nƒÉng ph·ª•c h·ªìi",
      "teamOwnership": "Quy·ªÅn s·ªü h·ªØu v√† t·ª± ch·ªß c·ªßa team"
    },
    "communicationPoints": {
      "restApis": "REST APIs cho giao ti·∫øp ƒë·ªìng b·ªô",
      "rabbitmq": "RabbitMQ cho messaging b·∫•t ƒë·ªìng b·ªô",
      "eventDriven": "Ki·∫øn tr√∫c h∆∞·ªõng s·ª± ki·ªán cho loose coupling",
      "circuitBreaker": "Circuit breaker pattern cho kh·∫£ nƒÉng ph·ª•c h·ªìi",
      "serviceDiscovery": "Service discovery v√† load balancing"
    },
    "domains": {
      "account": {
        "title": "Account Domain",
        "subtitle": "Qu·∫£n l√Ω Ng∆∞·ªùi d√πng",
        "features": {
          "registration": "ƒêƒÉng k√Ω ng∆∞·ªùi d√πng & h·ªì s∆°",
          "authentication": "X√°c th·ª±c & ƒëƒÉng nh·∫≠p",
          "verification": "X√°c minh t√†i kho·∫£n",
          "passwordMgmt": "Qu·∫£n l√Ω m·∫≠t kh·∫©u"
        }
      },
      "authorization": {
        "title": "Authorization Domain",
        "subtitle": "Ki·ªÉm so√°t Truy c·∫≠p",
        "features": {
          "rbac": "Ki·ªÉm so√°t truy c·∫≠p d·ª±a tr√™n vai tr√≤",
          "jwtManagement": "Qu·∫£n l√Ω JWT token",
          "permissionValidation": "X√°c th·ª±c quy·ªÅn h·∫°n",
          "apiGatewaySecurity": "B·∫£o m·∫≠t API gateway"
        }
      },
      "content": {
        "title": "Content Domain",
        "subtitle": "Qu·∫£n l√Ω Media",
        "features": {
          "fileUploads": "Upload file & x·ª≠ l√Ω",
          "cdnIntegration": "T√≠ch h·ª£p CDN",
          "imageOptimization": "T·ªëi ∆∞u h√≥a h√¨nh ·∫£nh",
          "storageManagement": "Qu·∫£n l√Ω l∆∞u tr·ªØ"
        }
      },
      "communication": {
        "title": "Communication Domain",
        "subtitle": "Messaging",
        "features": {
          "emailDelivery": "G·ª≠i email & template",
          "notifications": "Push notifications",
          "messageQueues": "X·ª≠ l√Ω message queue",
          "eventBroadcasting": "Ph√°t s√≥ng s·ª± ki·ªán"
        }
      }
    },
    "dataFlowPatterns": "Lu·ªìng D·ªØ li·ªáu & M√¥ h√¨nh T√≠ch h·ª£p",
    "databasePerService": {
      "title": "Database ri√™ng cho m·ªói Service",
      "description": "M·ªói microservice duy tr√¨ database ri√™ng ƒë·ªÉ ƒë·∫£m b·∫£o t·ª± ch·ªß d·ªØ li·ªáu v√† tr√°nh li√™n k·∫øt ch·∫∑t ch·∫Ω gi·ªØa c√°c service.",
      "badges": {
        "dataIsolation": "C√°ch ly d·ªØ li·ªáu"
      }
    },
    "apiGateway": {
      "title": "M√¥ h√¨nh API Gateway",
      "description": "ƒêi·ªÉm v√†o t·∫≠p trung cho t·∫•t c·∫£ client requests v·ªõi routing, authentication, rate limiting, v√† monitoring.",
      "badges": {
        "loadBalancing": "C√¢n b·∫±ng t·∫£i",
        "rateLimiting": "Gi·ªõi h·∫°n t·ªëc ƒë·ªô",
        "sslTermination": "SSL Termination"
      }
    },
    "eventDriven": {
      "title": "Giao ti·∫øp h∆∞·ªõng s·ª± ki·ªán",
      "description": "Messaging b·∫•t ƒë·ªìng b·ªô s·ª≠ d·ª•ng RabbitMQ cho loose coupling v√† c·∫£i thi·ªán kh·∫£ nƒÉng ph·ª•c hÔøΩÔøΩi h·ªá th·ªëng.",
      "badges": {
        "eventSourcing": "Event Sourcing",
        "messageQueues": "Message Queues"
      }
    },
    "securityMonitoring": {
      "title": "B·∫£o m·∫≠t & Gi√°m s√°t",
      "description": "B·∫£o m·∫≠t to√†n di·ªán v·ªõi JWT tokens, ki·ªÉm so√°t truy c·∫≠p d·ª±a tr√™n vai tr√≤, v√† gi√°m s√°t th·ªùi gian th·ª±c.",
      "badges": {
        "jwtAuth": "JWT Auth",
        "rbac": "RBAC",
        "observability": "Kh·∫£ nƒÉng quan s√°t"
      }
    }
  },
  "technology": {
    "title": "C√¥ng ngh·ªá",
    "description": "C√°c c√¥ng ngh·ªá ƒë∆∞·ª£c s·ª≠ d·ª•ng trong h·ªá th·ªëng"
  }
}
